stages:
  - build
  - test
  - apk

variables:
  PACKAGE_VERSION: "0.42"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/AirQuality/${PACKAGE_VERSION}"

build-job:
  stage: build
  image: cimg/android:2024.09.1
  when: manual
  tags:
    - comp2100
  script:
    - echo "Assembling project"
    - cd App
    - mkdir -p apk
    - ./gradlew --build-cache assemble
    - cp app/build/outputs/apk/release/app-release-unsigned.apk apk/ourApk.apk
    - cp app/build/outputs/apk/release/output-metadata.json apk/metadata.json
    - ls -a
    - ls -a apk
  cache:
    - key: cache-$CI_COMMIT_REF_SLUG
    - policy: push
    - paths:
      - App/app/build
      - App/.gradle
      - App/apk
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test-job:
  stage: test
  image: cimg/android:2024.09.1
  tags:
    - comp2100
  cache:
    - key: cache-$CI_COMMIT_REF_SLUG
    - policy: pull
    - paths:
      - App/app/build
      - App/.gradle
  script:
    - echo "Running gradle test"
    - ls -a
    - cd App
    - ./gradlew test
    - ls -a
  artifacts:
    when: always
    reports:
      junit: App/app/build/test-results/**/TEST-*.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

apk-release:
  stage: apk
  image: curlimages/curl:latest
  tags:
    - comp2100
  cache:
    key: cache-$CI_COMMIT_REF_SLUG
    policy: pull
    paths:
      - App/apk
  script:
    - echo "Pushing latest APK"
    - ls -a
    - cd App
    - ls -a
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file apk/ourApk.apk "${PACKAGE_REGISTRY_URL}/apk-${PACKAGE_VERSION}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file apk/metadata.json "${PACKAGE_REGISTRY_URL}/apk-metadata-${PACKAGE_VERSION}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"